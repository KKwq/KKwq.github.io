<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Github博客绑定个人域名</title>
    <link href="/2023/09/06/Github%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D/"/>
    <url>/2023/09/06/Github%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<p>通过Github搭建个人博客后，可以通过<code>&lt;用户名&gt;.github.io</code>来访问博客网站，那么如何绑定个人域名来通过个人域名来访问博客网站呢？</p><ul><li>购买个人域名</li></ul><p>自行购买域名，一般来说第一年比较便宜可以买到，第二年就开始贵了，可以一年换一个域名。我是在阿里云购买的域名，¥15一年。需要实名认证和域名审核。</p><ul><li>配置域名解析</li></ul><p>进入管理控制台，域名列表-&gt;找到需要绑定的域名-&gt;点击解析。</p><p>添加2条解析记录，类型<code>CNAME</code>，记录值是仓库名称(&lt;用户名&gt;.github.io)，主机记录分别为<code>www</code>和<code>@</code>，如图所示。</p><p><img src="/2023/09/06/Github%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90.png"></p><ul><li>配置Github Pages</li></ul><p>找到自己github博客对应的仓库，点击<code>settings</code>，在<code>Custom domain</code>中输入个人域名。并启用<code>Enforce HTTPS</code>。</p><p><img src="/2023/09/06/Github%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D/github%E9%85%8D%E7%BD%AE.png"></p><ul><li>本地设置<code>CNAME</code>文件</li></ul><p>文件全名<code>CNAME</code>，没有后缀。内容是你的个人域名。</p><ul><li>再次发布网站</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g -d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>搭建个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>域名</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>避免hexo d时输入用户名和密码</title>
    <link href="/2023/09/01/%E8%AE%BE%E7%BD%AEssh%E9%81%BF%E5%85%8Dhexo-d%E6%97%B6%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/"/>
    <url>/2023/09/01/%E8%AE%BE%E7%BD%AEssh%E9%81%BF%E5%85%8Dhexo-d%E6%97%B6%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="方法一-设置ssh"><a href="#方法一-设置ssh" class="headerlink" title="方法一 设置ssh"></a>方法一 设置ssh</h2><p>这个方法按照网上的教程配置好以后，还是需要输入用户名和<code>token</code>，可能是有什么其他地方没有配置好，想要研究的话可以研究一下为什么配置<code>ssh</code>后不起作用。</p><p>借助<code>Github+Hexo</code>搭建个人博客后，<code>hexo d</code>时需要输入用户名和<code>token</code>，比较繁琐，可以配置ssh密钥来避免输入用户名和<code>token</code>。</p><ul><li>生成ssh密钥</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装并启动ssh</span><br>sudo apt install ssh<br>sudo service ssh start<br><span class="hljs-comment"># 先查看~目录下有没有.ssh目录，没有的话需要创建一个~/.ssh目录</span><br><span class="hljs-built_in">cd</span> ~/.ssh<br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br><br><span class="hljs-comment"># 显示如下 直接enter 使用默认文件名</span><br>Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/home/you/.ssh/id_rsa):<br><br><span class="hljs-comment"># 显示如下 为了追求方便 直接两次enter</span><br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): [Type a passphrase]<br>Enter same passphrase again: [Type passphrase again]<br><br><span class="hljs-comment"># 显示如下 可能不太一样 大差不差就行</span><br>Your identification has been saved <span class="hljs-keyword">in</span> ~/.ssh/id_rsa.<br>Your public key has been saved <span class="hljs-keyword">in</span> ~/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com<br><span class="hljs-comment"># 此时密钥存储在 ~/.ssh/id_rsa.pub 中</span><br></code></pre></td></tr></table></figure><ul><li>配置github项目的Deploy keys</li></ul><p>在<code>username.github.io</code>仓库中配置，点击仓库-&gt;settings-&gt;Deploy keys-&gt;Add deploy key</p><p>随便输入一个title，将<code>~/.ssh/id_rsa.pub</code>中的内容复制到输入栏中，点击<code>Add key</code>即可。</p><ul><li>测试</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br><span class="hljs-comment"># 出现以下内容即可，可能不是直接出现，只要最后出现一次就好了</span><br>Hi username! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><h2 id="方法二-将token写入到deploy-repo"><a href="#方法二-将token写入到deploy-repo" class="headerlink" title="方法二 将token写入到deploy.repo"></a>方法二 将token写入到deploy.repo</h2><p>修改根目录下的<code>_config.yml</code>文件。</p><p>原配置如下图：</p><p><img src="/%E5%8E%9F%E9%85%8D%E7%BD%AE.png"></p><p>修改为:</p><p><img src="/%E6%96%B0%E9%85%8D%E7%BD%AE.png"></p><p>最后<code>hexo g -d</code>测试一下是否需要输入<code>username</code>和<code>token</code>即可。</p>]]></content>
    
    
    <categories>
      
      <category>搭建个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>避免hexo d时输入用户名和密码</title>
    <link href="/2023/09/01/%E9%81%BF%E5%85%8Dhexo-d%E6%97%B6%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/"/>
    <url>/2023/09/01/%E9%81%BF%E5%85%8Dhexo-d%E6%97%B6%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>借助Github+Hexo搭建个人博客后，<code>hexo d</code>时需要输入用户名和token，比较繁琐，可以配置ssh密钥来避免输入用户名和token。</p><ul><li>生成ssh密钥</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装并启动ssh</span><br>sudo apt install ssh<br>sudo service ssh start<br><span class="hljs-comment"># 先查看~目录下有没有.ssh目录，没有的话需要创建一个~/.ssh目录</span><br><span class="hljs-built_in">cd</span> ~/.ssh<br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br><br><span class="hljs-comment"># 显示如下 直接enter 使用默认文件名</span><br>Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/home/you/.ssh/id_rsa):<br><br><span class="hljs-comment"># 显示如下 为了追求方便 直接两次enter</span><br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): [Type a passphrase]<br>Enter same passphrase again: [Type passphrase again]<br><br><span class="hljs-comment"># 显示如下 可能不太一样 大差不差就行</span><br>Your identification has been saved <span class="hljs-keyword">in</span> ~/.ssh/id_rsa.<br>Your public key has been saved <span class="hljs-keyword">in</span> ~/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com<br><span class="hljs-comment"># 此时密钥存储在 ~/.ssh/id_rsa.pub 中</span><br></code></pre></td></tr></table></figure><ul><li>配置github项目的Deploy keys</li></ul><p>在<code>username.github.io</code>仓库中配置，点击仓库-&gt;settings-&gt;Deploy keys-&gt;Add deploy key</p><p>随便输入一个title，将<code>~/.ssh/id_rsa.pub</code>中的内容复制到输入栏中，点击<code>Add key</code>即可。</p><ul><li>测试</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br><span class="hljs-comment"># 出现以下内容即可，可能不是直接出现，只要最后出现一次就好了</span><br>Hi username! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>搭建个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速生成Github上Markdown的目录</title>
    <link href="/2023/09/01/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90Github%E4%B8%8AMarkdown%E7%9A%84%E7%9B%AE%E5%BD%95/"/>
    <url>/2023/09/01/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90Github%E4%B8%8AMarkdown%E7%9A%84%E7%9B%AE%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>Github的Markdown语法不支持[TOC]自动生成目录，需要手动写目录。</p><p>可以借助<code>gd-md-toc</code>工具来快速生成目录。</p><p><a href="https://github.com/ekalinin/github-markdown-toc">gh-md-toc链接</a></p><p>Linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://raw.githubusercontent.com/ekalinin/github-markdown-toc/master/gh-md-toc<br><span class="hljs-built_in">chmod</span> a+x gh-md-toc<br></code></pre></td></tr></table></figure><p>此时可以获得一个可执行文件<code>gh-md-toc</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 用法</span><br>./gh-md-toc 文件路径<br></code></pre></td></tr></table></figure><p><img src="/2023/09/01/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90Github%E4%B8%8AMarkdown%E7%9A%84%E7%9B%AE%E5%BD%95/%E7%A4%BA%E4%BE%8B.png" alt="如图所示"></p><p>将生成的目录复制到对应Markdown文件的对应位置即可。</p>]]></content>
    
    
    <categories>
      
      <category>搭建个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
      <tag>gh-md-toc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>借助Github搭建个人博客</title>
    <link href="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="借助Github搭建个人博客"><a href="#借助Github搭建个人博客" class="headerlink" title="借助Github搭建个人博客"></a>借助Github搭建个人博客</h1><ul><li><a href="#%E5%80%9F%E5%8A%A9github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2">借助Github搭建个人博客</a><ul><li><a href="#%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85">环境安装</a><ul><li><a href="#github%E8%B4%A6%E5%8F%B7%E4%B8%8E%E4%BB%93%E5%BA%93">github账号与仓库</a></li><li><a href="#git%E5%AE%89%E8%A3%85">git安装</a></li><li><a href="#nodejs%E5%AE%89%E8%A3%85">nodejs安装</a></li><li><a href="#hexo%E5%AE%89%E8%A3%85">hexo安装</a></li></ul></li><li><a href="#%E5%85%B3%E4%BA%8E%E9%A1%B5">关于页</a></li><li><a href="#hexo%E9%85%8D%E7%BD%AE">hexo配置</a><ul><li><a href="#fluid%E4%B8%BB%E9%A2%98">Fluid主题</a></li><li><a href="#leancloud%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C">leancloud账号注册</a></li><li><a href="#%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1">文章阅读量统计</a></li><li><a href="#%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD">计数功能</a></li><li><a href="#%E9%A1%B5%E9%9D%A2%E5%BA%95%E9%83%A8%E6%98%BE%E7%A4%BA-pv-uv%E8%AE%A1%E6%95%B0">页面底部显示 PV UV计数</a></li><li><a href="#%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD">添加评论功能</a></li></ul></li><li><a href="#%E9%83%A8%E7%BD%B2%E5%88%B0github">部署到github</a></li><li><a href="#%E5%A4%A7%E5%8A%9F%E5%91%8A%E6%88%90">大功告成</a></li></ul></li></ul><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="github账号与仓库"><a href="#github账号与仓库" class="headerlink" title="github账号与仓库"></a>github账号与仓库</h3><p>首先要有一个 Github 账号，并创建一个博客仓库。</p><p>登录Github后点击个人头像，点击<code>Your repositories</code>，进入仓库页面。</p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%931.png"></p><p>点击<code>new</code>，创建一个新的仓库。<code>Repository name=&lt;用户名&gt;.github.io</code>。</p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%932.png"></p><p>点击<code>create a new file</code>创建一个新的文件，文件名为<code>index.html</code></p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BAindex.html%E6%96%87%E4%BB%B6.png"></p><p>文件内容如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>网站主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>我的个人主页<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello World~<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p>接下来就可以在浏览器访问主页了，访问网址<code>https://用户名.github.io/</code>。</p><p>其他环境如下，尤其是nodejs的版本，我一开始用的是node v18 LTS，本地部署没问题，但是部署到Github后index.html就变成空白了，换到node v14后正常，node版本依赖大坑。</p><table><thead><tr><th align="center">环境</th><th align="center">版本</th></tr></thead><tbody><tr><td align="center">笔记本电脑</td><td align="center">联想LegionY9000P（2022）</td></tr><tr><td align="center">操作系统</td><td align="center">deepin 20.9 LTS</td></tr><tr><td align="center">git</td><td align="center">2.20.1</td></tr><tr><td align="center">nodejs</td><td align="center">14.21.3</td></tr><tr><td align="center">hexo-cli</td><td align="center">4.3.1</td></tr></tbody></table><h3 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install git <span class="hljs-comment"># git版本无关紧要</span><br></code></pre></td></tr></table></figure><h3 id="nodejs安装"><a href="#nodejs安装" class="headerlink" title="nodejs安装"></a>nodejs安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 有些Linux系统通过包管理工具安装nodejs比较麻烦，因为通过命令安装的版本可能是很老的版本</span><br><span class="hljs-comment"># 但是没关系，可以先随便安装一个版本，然后通过安装n工具来安装想要的nodejs版本</span><br><span class="hljs-comment"># 以deepin为例，先安装nodejs</span><br>sudo apt install nodejs<br><span class="hljs-comment"># 更改源</span><br>sudo npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br><span class="hljs-comment"># 安装 n</span><br>sudo npm install n -g<br><span class="hljs-comment"># 安装 nodejs 以下列出了几种n的常见用法，选择需要的即可</span><br>sudo n stable <span class="hljs-comment"># 安装稳定版</span><br>sudo n latest <span class="hljs-comment"># 安装最新版</span><br>sudo n 版本号  <span class="hljs-comment"># 安装指定版本</span><br><span class="hljs-comment"># 查看已安装的node版本</span><br>n<br><span class="hljs-comment"># 切换版本</span><br>n 版本号<br><span class="hljs-comment"># 删除版本</span><br>sudo n <span class="hljs-built_in">rm</span> 版本号<br></code></pre></td></tr></table></figure><p>最后可以通过<code>node -v</code>查看当前激活的node版本</p><h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装hexo</span><br>sudo npm install hexo-cli -g<br><span class="hljs-comment"># 查看版本</span><br>hexo -v<br><span class="hljs-comment"># 创建项目</span><br>hexo init test-blog<br><span class="hljs-built_in">cd</span> test-blog<br>npm install<br><span class="hljs-comment"># 本地启动</span><br>hexo g<br>hexo s<br></code></pre></td></tr></table></figure><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9D%E5%A7%8B%E5%8C%96hexo.png" alt="在浏览器访问 http://localhost:4000 即可看到本界面"></p><h2 id="关于页"><a href="#关于页" class="headerlink" title="关于页"></a>关于页</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about <span class="hljs-comment"># 首次使用，创建关于页</span><br></code></pre></td></tr></table></figure><p>创建成功后，修改文件<code>test-blog/source/about/index.md</code>，在date行下面添加一行<code>layout: about</code>。</p><p>本地启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><h2 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h2><h3 id="Fluid主题"><a href="#Fluid主题" class="headerlink" title="Fluid主题"></a>Fluid主题</h3><p>下载<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新release版本</a>到<code>test-blog/themes/</code>下，解压并重命名为fluid。注意不要出现解压错误，主要是通过鼠标解压可能会出现目录嵌套的问题，解压完检查一下没问题即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改test-blog/_config.yml 特别注意:后面还有一个空格</span><br><br>theme: fluid  <span class="hljs-comment"># 指定主题</span><br>language: zh-CN  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br>post_asset_folder: <span class="hljs-literal">true</span> <span class="hljs-comment"># 打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件</span><br><span class="hljs-comment"># 图片的引入方式</span><br>&#123;% asset_img test.png 图片引用方法一 %&#125;<br><br>![图片引用方法二](test.png)<br><br><span class="hljs-comment"># 特别说明，将图片文件放在资源目录下，通过Markdown写法![]()引入的图片，本地Markdown无法显示，但是部署到github后可以正常显示。</span><br></code></pre></td></tr></table></figure><h3 id="leancloud账号注册"><a href="#leancloud账号注册" class="headerlink" title="leancloud账号注册"></a>leancloud账号注册</h3><p><code>Fluid</code> 主题写好了统计阅读量的代码，但是缺少相应配置所以没有开启，需要借助三方服务来统计阅读量，这里是有 <code>Leancloud</code> 的免费服务来进行统计。</p><p><a href="https://console.leancloud.cn/">LeanCloud官网</a>，注册并实名认证，验证邮箱。</p><p>创建应用，开发版（免费的）。</p><p>打开该应用的设置-&gt;应用凭证，有AppID，AppKey，REST API服务器地址。</p><h3 id="文章阅读量统计"><a href="#文章阅读量统计" class="headerlink" title="文章阅读量统计"></a>文章阅读量统计</h3><p>修改<code>test-blog/themes/fluid/_config.yml</code>文件</p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E7%BD%91%E9%A1%B5%E8%AE%BF%E9%97%AE%E7%BB%9F%E8%AE%A1%E5%BC%80%E5%85%B3.png"></p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/leancloud%E9%85%8D%E7%BD%AE.png" alt="server_url填写leadcloud的REST API"></p><h3 id="计数功能"><a href="#计数功能" class="headerlink" title="计数功能"></a>计数功能</h3><p>修改<code>test-blog/themes/fluid/_config.yml</code>文件</p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD.png"></p><h3 id="页面底部显示-PV-UV计数"><a href="#页面底部显示-PV-UV计数" class="headerlink" title="页面底部显示 PV UV计数"></a>页面底部显示 PV UV计数</h3><p>修改<code>test-blog/themes/fluid/_config.yml</code>文件</p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/PV_UV%E8%AE%A1%E6%95%B0.png"></p><h3 id="添加评论功能"><a href="#添加评论功能" class="headerlink" title="添加评论功能"></a>添加评论功能</h3><p>修改<code>test-blog/themes/fluid/_config.yml</code>文件</p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD.png"></p><p><img src="/2023/09/01/%E5%80%9F%E5%8A%A9Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/valine.png"></p><h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装hexo-deployer-git</span><br>npm install hexo-deployer-git --save<br><span class="hljs-comment"># 修改/test-blog/_config.yml文件</span><br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/用户名/用户名.github.io.git<br>  branch: main<br>  token: 创建一个github的token粘贴在这里 <span class="hljs-comment"># 获取token的方式自行百度</span><br></code></pre></td></tr></table></figure><p>部署到github</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d <span class="hljs-comment"># 最好有稳定的网络，因此你最好会魔法</span><br><span class="hljs-comment"># 需要特别说明，这个时候需要你的github的username和password。username就是你github的用户名，password却不是你的密码，而是token。可以去_config.yml文件中复制token过来。</span><br></code></pre></td></tr></table></figure><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>至此就算是搭建好了个人博客，可以通过<code>https://用户名.github.io/</code>来访问。但是有一点，本地项目部署到github后有一定延迟，也就是说执行<code>hexo g -d</code>后，github仓库已经更新了，但是通过<code>https://用户名.github.io/</code>访问的时候网页内容还没有更新，需要等一段时间。</p><p>可以通过<code>hexo s</code>本地启动来查看最新的效果。</p><p>参考链接：</p><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">Github+Hexo搭建个人博客</a></p><p><a href="https://blog.csdn.net/Fabulous1111/article/details/84983869">Node版本切换</a></p>]]></content>
    
    
    <categories>
      
      <category>搭建个人博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Node</tag>
      
      <tag>LeanCloud</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/31/hello-world/"/>
    <url>/2023/08/31/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
